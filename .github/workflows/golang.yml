name: golang docker build & push

on:
  pull_request:
  push:
  schedule:
    - cron: 0 0 * * 0

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:
  generate-jobs:
    name: golang-build
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        include:
          -
            name: golang-1.19.3-bullseye
            image: dongjiang1989/bullseye
            file: ./golang/1.19/bullseye/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          -
            name: golang-1.19.3-alpine3.15
            image: dongjiang1989/alpine
            file: ./golang/1.19/alpine3.15/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          -
            name: golang-1.19.3-alpine3.16
            image: dongjiang1989/alpine
            file: ./golang/1.19/alpine3.16/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          -
            name: golang-1.19.3-buster
            image: dongjiang1989/buster
            file: ./golang/1.19/buster/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
          -
            name: golang-1.19.3-bclinux8.2
            image: dongjiang1989/bclinux
            file: ./golang/1.19/bclinux/Dockerfile
            platforms: linux/amd64
          -
            name: golang-1.19.3-bcoe21.10
            image: dongjiang1989/bc-oe
            file: ./golang/1.19/euler21.10/Dockerfile
            platforms: linux/amd64,linux/arm64
          -
            name: golang-1.19.3-bcoe22.03
            image: dongjiang1989/bc-oe
            file: ./golang/1.19/euler22.03/Dockerfile
            platforms: linux/amd64,linux/arm64
          -
            name: golang-1.18.8-bullseye
            image: dongjiang1989/bullseye
            file: ./golang/1.18/bullseye/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          -
            name: golang-1.18.8-alpine3.15
            image: dongjiang1989/alpine
            file: ./golang/1.18/alpine3.15/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          -
            name: golang-1.18.8-alpine3.16
            image: dongjiang1989/alpine
            file: ./golang/1.18/alpine3.16/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          -
            name: golang-1.18.8-buster
            image: dongjiang1989/buster
            file: ./golang/1.18/buster/Dockerfile
            platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
          -
            name: golang-1.18.8-bclinux8.2
            image: dongjiang1989/bclinux
            file: ./golang/1.18/bclinux/Dockerfile
            platforms: linux/amd64
          -
            name: golang-1.18.8-bcoe21.10
            image: dongjiang1989/bc-oe
            file: ./golang/1.18/euler21.10/Dockerfile
            platforms: linux/amd64,linux/arm64
          -
            name: golang-1.18.8-bcoe22.03
            image: dongjiang1989/bc-oe
            file: ./golang/1.18/euler22.03/Dockerfile
            platforms: linux/amd64,linux/arm64
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2 
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.file }}
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ matrix.image }}:${{ matrix.name }}
      - name: Test ${{ matrix.name }}
        run: |
          docker pull ${{ matrix.image}}:${{ matrix.name }}
          docker image inspect ${{ matrix.image}}:${{ matrix.name }}
